using MDI
using StableRNGs
using Test

@testset "MDI.jl" begin
    @testset "logistic5" begin
        # Number
        numoutput = logistic5(0.5, [0.05,5,0.5,0.95,1])
        @test numoutput ≈ 0.5

        # Vectors
        vecoutput1 = logistic5([0.5], [0.02,5,0.6,0.9,13])
        @test vecoutput1 == [0.889104390448767]
        vecoutput2 = logistic5([0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1], [0.05,5,0.5,0.95,1])
        @test vecoutput2 ≈ [0.050000000000000044, 0.050287907869481896, 0.05912258473234089,
                           0.11493467933491697, 0.27212581344902387, 0.5, 0.6919961471424639,
                           0.8088952438290186, 0.8716421029170033, 0.9047640492810499, 0.9227272727272727]

        # Matrix
        matoutput = logistic5([0 0.1 0.2 0.3 0.4; 0.5 0.6 0.7 0.8 0.9], [0.05,5,0.5,0.95,1])
        @test matoutput ≈ [0.050000000000000044 0.050287907869481896 0.05912258473234089 0.11493467933491697 0.27212581344902387;
                           0.5                  0.6919961471424639   0.8088952438290186  0.8716421029170033  0.9047640492810499]
    end


    data_x = [0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1]
    data_y = [0.050000000000000044, 0.050287907869481896, 0.05912258473234089,
            0.11493467933491697, 0.27212581344902387, 0.5, 0.6919961471424639,
            0.8088952438290186, 0.8716421029170033, 0.9047640492810499, 0.9227272727272727]
    model_params = fit_model(data_x, data_y; rng=StableRNG(123)).param
    @test model_params ≈ [0.050000000000001696, 5.000000000000355, 0.49999999999996286, 0.950000000000014, 0.9999999999997183]

    auc, auc_scaled, startval, endval = get_aucs(model_params)
    @test auc ≈ 0.44682346066959855
    @test auc_scaled ≈ 0.5119852153505808
    @test startval ≈ 0.05000000000000171
    @test endval ≈ 0.922727272727276
end
